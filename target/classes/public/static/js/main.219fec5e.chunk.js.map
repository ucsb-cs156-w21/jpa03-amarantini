{"version":3,"sources":["main/assets/loading.svg","main/assets/checkbox.svg","main/assets/checkbox-checked.svg","main/components/Loading/Loading.js","main/components/Nav/LoginButton.js","main/components/Nav/LogoutButton.js","main/components/Nav/AuthNav.js","main/components/Nav/AppNavbar.js","main/components/Footer/AppFooter.js","main/pages/Home/Home.js","main/pages/Profile/Profile.js","main/components/Auth/PrivateRoute.js","main/pages/Todos/TodoForm.js","main/pages/Todos/CheckboxButton.js","main/pages/Todos/TodoEditForm.js","main/pages/Todos/TodoItem.js","main/pages/Todos/TodoHeader.js","main/utils/fetch.js","main/pages/Todos/Todos.js","main/App.js","main/components/Auth/Auth0ProviderWithHistory.js","serviceWorker.js","index.js"],"names":["module","exports","Loading","className","src","loading","alt","LoginButton","loginWithRedirect","useAuth0","Button","onClick","variant","LogoutButton","logout","returnTo","window","location","origin","AuthNav","isAuthenticated","AppNavbar","Navbar","bg","to","Brand","data-testid","Nav","Link","Collapse","AppFooter","href","Home","Jumbotron","Profile","user","name","picture","email","Container","Row","Col","md","PrivateRoute","component","args","withAuthenticationRequired","onRedirecting","TodoForm","addTask","useState","value","setValue","onSubmit","event","preventDefault","text","trim","fluid","xs","style","padding","Form","Control","type","placeholder","margin","onChange","target","CheckboxButton","item","toggle","index","background","border","e","updatedItem","done","id","checkboxChecked","checkbox","TodoEditForm","update","editMode","setEditMode","buttonName","textDecoration","handleOnClickOrSubmit","length","inline","width","readOnly","plaintext","TodoItem","updateTodo","deleteTodo","backgroundColor","ListGroup","Item","TodoHeader","fetchWithToken","url","getToken","options","a","token","unfetch","headers","Authorization","response","status","Error","error_description","noJSON","json","TodoList","getAccessTokenSilently","useSWR","todoList","data","error","mutateTodos","mutate","method","body","JSON","stringify","saveTodo","todoText","items","map","key","App","isLoading","path","exact","Auth0ProviderWithHistory","children","history","useHistory","domain","process","clientId","redirectUri","onRedirectCallback","appState","push","pathname","audience","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.219fec5e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.c5590569.svg\";","module.exports = __webpack_public_path__ + \"static/media/checkbox.7cbb5a76.svg\";","module.exports = __webpack_public_path__ + \"static/media/checkbox-checked.6c1dc7cb.svg\";","import React from \"react\";\nimport loading from \"main/assets/loading.svg\";\n\nconst Loading = () => {\n  return (\n    <div className=\"spinner\">\n      <img src={loading} alt=\"Loading\" />\n    </div>\n  );\n};\n\nexport default Loading;\n","import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { Button } from \"react-bootstrap\";\n\nconst LoginButton = () => {\n  const { loginWithRedirect } = useAuth0();\n  return (\n    <Button onClick={loginWithRedirect} variant=\"primary\">\n      Log In\n    </Button>\n  );\n};\n\nexport default LoginButton;\n","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nconst LogoutButton = () => {\n  const { logout } = useAuth0();\n  return (\n    <Button\n      variant=\"secondary\"\n      onClick={() => logout({ returnTo: window.location.origin })}\n    >\n      Log Out\n    </Button>\n  );\n};\n\nexport default LogoutButton;\n","import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport LoginButton from \"./LoginButton\";\nimport LogoutButton from \"./LogoutButton\";\n\nconst AuthNav = () => {\n  const { isAuthenticated } = useAuth0();\n  return <>{isAuthenticated ? <LogoutButton /> : <LoginButton />}</>;\n};\n\nexport default AuthNav;\n","import React from \"react\";\nimport { Nav, Navbar } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport AuthNav from \"main/components/Nav/AuthNav\";\n\nfunction AppNavbar() {\n  return (\n    <Navbar bg=\"dark\" variant=\"dark\">\n      <LinkContainer to={\"\"}>\n        <Navbar.Brand data-testid=\"brand\">Demo Spring React App</Navbar.Brand>\n      </LinkContainer>\n      <Nav>\n        <LinkContainer to={\"/todos\"}>\n          <Nav.Link>Todos</Nav.Link>\n        </LinkContainer>\n        <LinkContainer to={\"/profile\"}>\n          <Nav.Link>Profile</Nav.Link>\n        </LinkContainer>\n      </Nav>\n      <Navbar.Collapse className=\"justify-content-end\">\n        <AuthNav />\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n\nexport default AppNavbar;\n","import React from \"react\";\n\nconst AppFooter = () => {\n  return (\n    <footer className=\"bg-light p-3 text-center\">\n      This is a demo of a minimal React frontend + Spring Boot backend app.\n      Check out the source code on{\" \"}\n      <a href=\"https://github.com/ucsb-cs156-f20/demo-spring-nextjs-app\">\n        GitHub\n      </a>\n      !\n    </footer>\n  );\n};\n\nexport default AppFooter;\n","import React from \"react\";\nimport { Jumbotron } from \"react-bootstrap\";\nconst Home = () => {\n  return (\n    <Jumbotron>\n      <h1>This is 127.0.0.1 (aka home)</h1>\n      <div className=\"text-left\">\n        <p>Welcome to the Demo Spring React App!</p>\n        <p>\n          This app can hopefully help you understand how to use React with\n          Spring in order to create a functional web application. This app is\n          primarily built using the following:\n        </p>\n        <ul>\n          <li>\n            <a href=\"https://github.com/facebook/create-react-app\">\n              Create React App\n            </a>{\" \"}\n            - used for creating the React frontend from scratch\n          </li>\n          <li>\n            <a href=\"https://start.spring.io/\">Spring Boot Initializer</a> -\n            used for creating the Spring Boot backend\n          </li>\n        </ul>\n      </div>\n    </Jumbotron>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { Row, Container, Col } from \"react-bootstrap\";\nimport ReactJson from \"react-json-view\";\nconst Profile = () => {\n  const { user } = useAuth0();\n  const { name, picture, email } = user;\n\n  return (\n    <Container className=\"mb-5\">\n      <Row className=\"align-items-center profile-header mb-5 text-center text-md-left\">\n        <Col md={2}>\n          <img\n            src={picture}\n            alt=\"Profile\"\n            className=\"rounded-circle img-fluid profile-picture mb-3 mb-md-0\"\n          />\n        </Col>\n        <Col md>\n          <h2>{name}</h2>\n          <p className=\"lead text-muted\">{email}</p>\n        </Col>\n      </Row>\n      <Row className=\"text-left\">\n        <ReactJson src={user} />\n      </Row>\n    </Container>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { withAuthenticationRequired } from \"@auth0/auth0-react\";\nimport Loading from \"main/components/Loading/Loading\";\n\nconst PrivateRoute = ({ component, ...args }) => (\n  <Route\n    component={withAuthenticationRequired(component, {\n      onRedirecting: () => <Loading />,\n    })}\n    {...args}\n  />\n);\n\nexport default PrivateRoute;\n","import React, { useState } from \"react\";\nimport { Form, Button, Row, Col, Container } from \"react-bootstrap\";\n\nexport const TodoForm = ({ addTask }) => {\n  const [value, setValue] = useState(\"\");\n  return (\n    <form\n      onSubmit={(event) => {\n        event.preventDefault();\n        const text = value.trim();\n        text && addTask(text);\n        setValue(\"\");\n      }}\n    >\n      <Container fluid>\n        <Row>\n          <Col xs={11} style={{ padding: 0 }}>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"add todo\"\n              margin=\"normal\"\n              onChange={(event) => {\n                setValue(event.target.value);\n              }}\n              value={value}\n            />\n          </Col>\n          <Col xs={1} style={{ padding: 0 }}>\n            <Button type=\"submit\">Submit</Button>\n          </Col>\n        </Row>\n      </Container>\n    </form>\n  );\n};\n","import React from \"react\";\nimport checkbox from \"main/assets/checkbox.svg\";\nimport checkboxChecked from \"main/assets/checkbox-checked.svg\";\n\nconst CheckboxButton = ({ item, index, toggle }) => {\n  const handleCheckBoxClick = (e) => {\n    e.preventDefault();\n    const updatedItem = {\n      ...item,\n      done: !item.done,\n    };\n    toggle(updatedItem, item.id);\n  };\n\n  return (\n    <button\n      style={{ background: \"none\", border: \"none\" }}\n      onClick={handleCheckBoxClick}\n    >\n      <img src={item.done ? checkboxChecked : checkbox} alt=\"checkbox\"></img>\n    </button>\n  );\n};\n\nexport default CheckboxButton;\n","import React, { useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\n\nconst TodoEditForm = ({ item, update }) => {\n  const [editMode, setEditMode] = useState(false);\n  const [value, setValue] = useState(item.value);\n\n  const buttonName = editMode ? \"Done\" : \"Edit\";\n  const textDecoration = !editMode && item.done ? \"line-through\" : \"none\";\n\n  const handleOnClickOrSubmit = (event) => {\n    event.preventDefault();\n    if (value.trim().length === 0) {\n      return;\n    }\n    if (editMode) {\n      const updatedItem = {\n        ...item,\n        value,\n      };\n      update(updatedItem, updatedItem.id);\n    }\n    setEditMode(!editMode);\n  };\n\n  return (\n    <Form inline onSubmit={handleOnClickOrSubmit}>\n      <Form.Control\n        style={{ width: \"90%\", textDecoration }}\n        type=\"text\"\n        placeholder=\"todo name\"\n        readOnly={!editMode}\n        plaintext={!editMode}\n        value={value}\n        onChange={(e) => setValue(e.target.value)}\n      />\n      <Button onClick={handleOnClickOrSubmit}>{buttonName}</Button>\n    </Form>\n  );\n};\n\nexport default TodoEditForm;\n","import React from \"react\";\nimport { ListGroup, Button, Row, Col } from \"react-bootstrap\";\nimport CheckboxButton from \"./CheckboxButton\";\nimport TodoEditForm from \"./TodoEditForm\";\n\nexport function TodoItem({ item, index, updateTodo, deleteTodo }) {\n  const backgroundColor = item.done ? \"#ddd\" : \"#fff\";\n\n  return (\n    <ListGroup.Item style={{ backgroundColor }}>\n      <Row>\n        <Col md={1}>\n          <CheckboxButton item={item} toggle={updateTodo} />\n        </Col>\n        <Col md={10}>\n          <TodoEditForm update={updateTodo} item={item} />\n        </Col>\n        <Col md={1}>\n          <Button className=\"btn-danger\" onClick={(e) => deleteTodo(item.id)}>\n            Delete\n          </Button>\n        </Col>\n      </Row>\n    </ListGroup.Item>\n  );\n}\n","import React from \"react\";\n\nexport function TodoHeader({ name }) {\n  return <h1 className=\"display-2 text-center\">{name}'s todo list</h1>;\n}\n","import unfetch from \"isomorphic-unfetch\";\n\nexport async function fetchWithToken(url, getToken, options) {\n  const token = await getToken();\n  const response = await unfetch(url, {\n    ...options,\n    headers: {\n      ...options?.headers,\n      Authorization: `Bearer ${token}`,\n    },\n  });\n  if (response.status >= 400 && response.status < 600) {\n    throw new Error(response.error_description);\n  }\n  if (options?.noJSON) {\n    return response;\n  }\n  return response.json();\n}\n","import React from \"react\";\nimport useSWR from \"swr\";\nimport { ListGroup } from \"react-bootstrap\";\nimport { TodoForm } from \"./TodoForm\";\nimport { TodoItem } from \"./TodoItem\";\nimport { TodoHeader } from \"./TodoHeader\";\nimport { fetchWithToken } from \"main/utils/fetch\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport Loading from \"main/components/Loading/Loading\";\n\nconst TodoList = () => {\n  const { user, getAccessTokenSilently: getToken } = useAuth0();\n  const { data: todoList, error, mutate: mutateTodos } = useSWR(\n    [\"/api/todos\", getToken],\n    fetchWithToken\n  );\n  if (error) {\n    return (\n      <h1>We encountered an error; please reload the page and try again.</h1>\n    );\n  }\n  if (!todoList) {\n    return <Loading />;\n  }\n  const updateTodo = async (item, id) => {\n    await fetchWithToken(`/api/todos/${id}`, getToken, {\n      method: \"PUT\",\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n      body: JSON.stringify(item),\n    });\n    await mutateTodos();\n  };\n  const deleteTodo = async (id) => {\n    await fetchWithToken(`/api/todos/${id}`, getToken, {\n      method: \"DELETE\",\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n      noJSON: true,\n    });\n    await mutateTodos();\n  };\n\n  const saveTodo = async (todoText) => {\n    await fetchWithToken(`/api/todos/`, getToken, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        value: todoText,\n        done: false,\n      }),\n    });\n    await mutateTodos();\n  };\n  var items = todoList.map((item, index) => {\n    return (\n      <TodoItem\n        key={index}\n        item={item}\n        index={index}\n        updateTodo={updateTodo}\n        deleteTodo={deleteTodo}\n      />\n    );\n  });\n\n  return (\n    <>\n      <TodoHeader name={user.name} />\n      <TodoForm addTask={saveTodo} />\n      <ListGroup> {items} </ListGroup>\n    </>\n  );\n};\n\nexport default TodoList;\n","import React from \"react\";\nimport \"main/App.css\";\nimport Loading from \"main/components/Loading/Loading\";\nimport AppNavbar from \"main/components/Nav/AppNavbar\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { Container } from \"react-bootstrap\";\nimport { Route, Switch } from \"react-router-dom\";\nimport AppFooter from \"main/components/Footer/AppFooter\";\nimport Home from \"main/pages/Home/Home\";\nimport Profile from \"main/pages/Profile/Profile\";\nimport PrivateRoute from \"main/components/Auth/PrivateRoute\";\nimport TodoList from \"main/pages/Todos/Todos\";\n\nfunction App() {\n  const { isLoading } = useAuth0();\n\n  if (isLoading) {\n    return <Loading />;\n  }\n\n  return (\n    <div className=\"App\">\n      <AppNavbar />\n      <Container className=\"flex-grow-1 mt-5\">\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <PrivateRoute path=\"/todos\" component={TodoList} />\n          <PrivateRoute path=\"/profile\" component={Profile} />\n        </Switch>\n      </Container>\n      <AppFooter />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Auth0Provider } from \"@auth0/auth0-react\";\n\n// TODO: figure out how to test this component; there's a nasty issue with a sub dependency that prevents test from running\n\nconst Auth0ProviderWithHistory = ({ children }) => {\n  const domain = process.env.REACT_APP_AUTH0_DOMAIN;\n  const clientId = process.env.REACT_APP_AUTH0_CLIENT_ID;\n  const audience = process.env.REACT_APP_AUTH0_AUDIENCE;\n  const history = useHistory();\n\n  const onRedirectCallback = (appState) => {\n    history.push(appState?.returnTo || window.location.pathname);\n  };\n\n  return (\n    <Auth0Provider\n      domain={domain}\n      clientId={clientId}\n      redirectUri={window.location.origin}\n      onRedirectCallback={onRedirectCallback}\n      audience={audience}\n    >\n      {children}\n    </Auth0Provider>\n  );\n};\n\nexport default Auth0ProviderWithHistory;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"main/App\";\nimport Auth0ProviderWithHistory from \"main/components/Auth/Auth0ProviderWithHistory\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Auth0ProviderWithHistory>\n        <App />\n      </Auth0ProviderWithHistory>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}